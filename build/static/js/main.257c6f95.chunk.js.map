{"version":3,"sources":["components/Home/customStyles.js","components/Home/Posts.js","components/store/actions/allActions.js","components/Home/Home.js","components/Contact/Submitted.js","components/Contact/Contact.js","components/About/About.js","components/NavBar/NavBar.js","components/Photos/Photos.js","components/Home/PostDetails.js","components/Redirect.js","App.js","components/store/reducers/mainReducer.js","index.js"],"names":["customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","Posts","state","loading","closeModal","props","cookies","set","path","handleClick","e","history","push","target","id","handleClickNext","preventDefault","num","parseInt","match","params","page2","toString","setState","handleClickPrev","ReactGA","page","window","location","pathname","pageview","this","getAllPosts","prevProps","postList","posts","map","post","body","split","join","key","className","src","alt","title","onClick","modalBodyPar","modalBody","par","uuid","ariaHideApp","isOpen","undefined","allCookies","modalIsOpen","style","modal","paddingTop","paddingBottom","React","Component","compose","withCookies","withRouter","connect","dispatch","axios","get","then","res","type","payload","data","Home","Submitted","Contact","name","email","text","isSubmited","handleChange","value","handleSubmit","postContact","onSubmit","placeholder","onChange","required","pattern","About","useEffect","NavBar","href","to","Photos","getPhotos","photosArr","photos","url","PostDetails","getSinglePost","postId","singlePost","bodyPar","Date","valueOf","Math","random","Redirect","initialize","App","exact","component","initState","postsReducer","action","reverse","store","createStore","mainReducer","applyMiddleware","thunk","ReactDOM","render","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.257c6f95.chunk.js","sourcesContent":["\nexport const customStyles = {\n    overlay: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(255, 255, 255, 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      top: '50px',\n      left: '80px',\n      right: '80px',\n      bottom: '90px',\n      border: '1px solid #ccc',\n      background: '#fff',\n      overflow: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      borderRadius: '4px',\n      outline: 'none',\n      padding: '20px'\n    }\n  };","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { withCookies } from 'react-cookie';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { getAllPosts } from \"../store/actions/allActions\";\nimport { customStyles } from './customStyles';\nimport ReactGA from 'react-ga';\nimport uuid from 'react-uuid';\n\n\nclass Posts extends React.Component {\n  state = {\n    loading: true,\n  }\n\n  UNSAFE_componentWillMount(){\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname)\n  }\n\n  componentDidMount() {\n    this.props.getAllPosts(this.props.match.params.page2);\n  }\n\n  UNSAFE_componentWillUpdate() {\n    if(this.state.loading === true){\n      this.setState({\n        loading: false\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.location !== prevProps.location){\n        this.props.getAllPosts(this.props.match.params.page2);\n    }\n  }\n\n  closeModal = () => {\n    this.props.cookies.set(\"modalIsOpen\", false, {path: \"/\"})\n  }\n\n\n  handleClick = e => {\n    this.props.history.push(\"/posts/\" + e.target.id);\n  };\n\n  handleClickNext = (e) => {\n    e.preventDefault();\n    let num = parseInt(this.props.match.params.page2);\n    if(num < 4){\n        num += 1;\n        num.toString();\n        this.props.history.push(\"/page/\" + num);\n        this.setState({\n            loading: true\n        })\n    }\n  }\n\n  handleClickPrev = (e) => {\n    e.preventDefault();\n    let num = parseInt(this.props.match.params.page2);\n    if(num>1){\n        num -= 1;\n        num.toString();\n        this.props.history.push(\"/page/\" + num);\n        this.setState({\n            loading: true\n        })\n    }\n  }\n\n  render() {\n    const posts = this.props.posts;\n    const postList = posts.map(post => {\n      //paragraph mapping\n      const body = post.body.split(\"\\\\n\").join(\"\");\n      return (\n        <div key={post.id} className=\"post\">\n          <img\n            className=\"crown-1\"\n            src=\"/images/posts-corner.png\"\n            alt=\"\"\n          />\n          <span className=\"card-title red-text \">{post.title}</span>\n          <p className=\"body truncate\">\n            <br />\n            {body}\n          </p>\n          <div className=\"button\">\n            <br />\n            <button\n              id={post.id}\n              className=\"posts-btn\"\n              onClick={this.handleClick}\n            >\n              See More\n            </button>\n          </div>\n        </div>\n      );\n    });\n    if(this.state.loading){\n      return (\n        <div className=\"posts\">\n          <div className=\"lds-dual-ring\"></div>\n        </div>\n      )\n    }else {\n      //modal return\n      const modalBodyPar = this.props.modalBody.map(par => {\n        return (\n          <p key={uuid()} className=\"modal-par\">{par}</p>\n        )\n      })\n      // actual rendering\n      return (\n        <div className=\"posts\">\n          <ReactModal ariaHideApp={false} isOpen={(this.props.allCookies.modalIsOpen === undefined)} style={customStyles}>\n            <h1 className=\"card-title modal-card-title\">{this.props.modal.title}</h1>\n            {modalBodyPar}\n            <button onClick={this.closeModal} className=\"modal-button\">Close</button>\n          </ReactModal>\n          <img\n            className=\"socrates\"\n            src=\"/images/posts-socrates-min.png\"\n            alt=\"\"\n          />\n          <h1 className=\"card-title\" style={{paddingTop: 50, paddingBottom: 50}}>Latest Posts</h1>\n          {postList}\n          <div className=\"btn-container\">\n            <button className=\"btn-previous\" onClick={this.handleClickPrev}>PREVIOUS</button>\n            <button className=\"btn-next\" onClick={this.handleClickNext}>NEXT</button>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    modal: state.modal,\n    modalBody: state.modalBody\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllPosts: (page2) => {\n      dispatch(getAllPosts(page2));\n    }\n  };\n};\n\nexport default compose(\n  withCookies,\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Posts);\n","import axios from \"axios\";\n\nexport const getAllPosts = (page2) => {\n  return dispatch => {\n    axios.get(\"http://blog-app-rest.herokuapp.com/api/page/\" + page2).then(res => {\n      return dispatch({ type: \"GET_ALL_POSTS\", payload: res.data });\n    });\n  };\n};\n\nexport const getSinglePost = id => {\n  return dispatch => {\n    axios.get(\"http://blog-app-rest.herokuapp.com/api/posts/\" + id).then(res => {\n      return dispatch({ type: \"GET_SINGLE_POST\", payload: res.data });\n    });\n  };\n};\n\nexport const getPhotos = (page) => {\n  return dispatch => {\n    axios.get(\"http://blog-app-rest.herokuapp.com/api/photos/\" + page)\n    .then(res => {\n      return dispatch({ type: \"GET_PHOTOS\", payload: res.data})\n    })\n  }\n}\n\nexport const postContact = (name, email, text) => {\n  return dispatch => {\n    axios.post(\"http://blog-app-rest.herokuapp.com/api/contact\", {\n      name,\n      email,\n      text\n    })\n    .then(res => {\n      return dispatch({ type: \"POST_CONTACT\", payload: res.data })\n    })\n  }\n}\n","import React from 'react'\nimport Posts from './Posts'\n\n\nfunction Home(props) {\n    return (\n        <Posts />\n    )\n}\n\nexport default Home\n","import React from \"react\";\n\nfunction Submitted() {\n  return (\n    <div className=\"submitted-container\">\n      <div className=\"content\">\n        <img src=\"/images/submited-tick.png\" alt=\"\" />\n        <h1>SUBMITTED</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Submitted;\n","import React from \"react\";\nimport { connect } from \"react-redux\"\nimport { postContact } from \"../store/actions/allActions\"\nimport Submited from \"./Submitted\";\nimport ReactGA from \"react-ga\";\n\n\nclass Contact extends React.Component {\n  state = {\n    name: null,\n    email: null,\n    text: null,\n    isSubmited: false\n  };\n\n  componentDidMount(){\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  handleChange = e => {\n    if (e.target.id === \"name\") {\n      this.setState({\n        name: e.target.value\n      });\n    } else if (e.target.id === \"email\") {\n      this.setState({\n        email: e.target.value\n      });\n    } else if (e.target.id === \"textarea\") {\n      this.setState({\n        text: e.target.value\n      });\n    } else return null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      isSubmited: true,\n    });\n    this.props.postContact(this.state.name,this.state.email,this.state.text)\n  };\n\n  render() {\n    if (this.state.isSubmited === false) {\n      return (\n        <div className=\"contact-container\">\n          <form onSubmit={this.handleSubmit}>\n            <h1>Stuff To Fill Up</h1>\n            <div className=\"input-field\">\n              <input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <input\n                id=\"email\"\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n                type=\"text\"\n                placeholder=\"E-mail\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <textarea\n                id=\"textarea\"\n                type=\"text\"\n                className=\"textarea\"\n                placeholder=\"What do you want to say?\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"button\">\n                <button type=\"submit\" className=\"btn teal\">\n                  SUBMIT\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      );\n    } else if (this.state.isSubmited === true) {\n      return <Submited />;\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postContact: (name, email, text) => {\n      dispatch(postContact(name, email, text))\n    }\n  }\n}\n\n\nexport default connect(null,mapDispatchToProps)(Contact);\n","import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nexport default function About(props) {\n\n  useEffect(()=> {\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname);\n  })\n\n  return (\n    <div className=\"about-container center\">\n      <div className=\"about\">\n        <div className=\"photos\">\n          <img\n            className=\"main-photo\"\n            src=\"images/about-self.jpeg\"\n            alt=\"\"\n          />\n        </div>\n        <div className=\"texts\">\n          <img\n            className=\"author\"\n            src=\"/images/about-signature.png\"\n            alt=\"\"\n          />\n          </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function NavBar() {\n  return (\n    <nav>\n      <div className=\"nav-wrapper grey\">\n        <a href=\"/page/1\" className=\"brand-logo\">\n          <img src=\"/images/navbar-brand.png\" alt=\"\" />\n        </a>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li>\n            <NavLink to=\"/page/1\">Home</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/photos/1\">Photos</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/about\">About</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/contact\">Contact</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { getPhotos } from \"../store/actions/allActions\"\nimport ReactGA from 'react-ga';\nimport uuid from 'react-uuid';\n\nclass Photos extends Component {\n\n    state = {\n        loading: true,\n    }\n\n    UNSAFE_componentWillMount(){\n      ReactGA.set({ page: window.location.pathname });\n      ReactGA.pageview(window.location.pathname);\n    }\n\n    componentDidMount() {\n        this.props.getPhotos(this.props.match.params.page);\n    }\n\n    UNSAFE_componentWillUpdate(){\n        if(this.state.loading === true){\n            this.setState({\n                loading: false\n            })\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if(this.props.location !== prevProps.location){\n            this.props.getPhotos(this.props.match.params.page);\n        }\n      }\n\n\n      handleClickNext = (e) => {\n        e.preventDefault();\n        let num = parseInt(this.props.match.params.page);\n        if(num < 4){\n            num += 1;\n            num.toString();\n            this.props.history.push(\"/photos/\" + num);\n            this.setState({\n                loading: true\n            })\n        }\n      }\n\n      handleClickPrev = (e) => {\n        e.preventDefault();\n        let num = parseInt(this.props.match.params.page);\n        if(num>1){\n            num -= 1;\n            num.toString();\n            this.props.history.push(\"/photos/\" + num);\n            this.setState({\n                loading: true\n            })\n        }\n      }\n\n      render() {\n        const photosArr = this.props.photos.map(url => {\n            return (\n                <div className=\"ins-photo\" key={uuid()}>\n                    <img src={url} alt=\"\"/>\n                </div>\n            )\n        })\n\n        if(this.state.loading === true) {\n            return (\n                <div className=\"posts\">\n                  <div className=\"lds-dual-ring\"></div>\n                </div>\n            )\n        }else {\n            return (\n                <div className=\"ins-container\">\n                    <p className=\"disclaimer card-title\"><strong>Disclaimer: </strong>I do not own any of the photos. They are just the photos I liked on the internet. All credits to the talented creators.</p>\n                    {photosArr}\n                    <div className=\"btn-container\">\n                        <button className=\"btn-previous\" onClick={this.handleClickPrev}>PREVIOUS</button>\n                        <button className=\"btn-next\" onClick={this.handleClickNext}>NEXT</button>\n                    </div>\n                </div>\n            )\n        }\n\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        photos: state.photos\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPhotos: (page) => {dispatch(getPhotos(page))}\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Photos);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSinglePost } from \"../store/actions/allActions\";\nimport ReactGA from 'react-ga'\n\nclass PostDetails extends Component {\n\n  state = {\n    loading: true\n  }\n\n  UNSAFE_componentWillMount(){\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  componentDidMount() {\n    this.props.getSinglePost(this.props.match.params.postId);\n  }\n\n  componentDidUpdate() {\n    if(this.state.loading === true) {\n      this.setState({\n        loading: false\n      })\n    }\n  }\n\n  render() {\n    const singlePost = this.props.post;\n    const bodyPar = this.props.body.map(par => {\n      const key = new Date().valueOf() + Math.random();\n      return (\n        <p key={key}>{par}</p>\n      )\n    })\n    if(this.state.loading === false) {\n      return (\n        <div className=\"post-details\">\n          <img src=\"\" alt=\"\" />\n          <h1 className=\"card-title red-text\">{singlePost.title}</h1>\n          {bodyPar}\n        </div>\n      );\n    }else {\n      return (\n        <div className=\"lds-dual-ring\"></div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    post: state.post,\n    body: state.body\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSinglePost: id => {\n      dispatch(getSinglePost(id));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostDetails);\n","import React from 'react'\r\n\r\nexport default function Redirect(props) {\r\n    return (\r\n        <div>\r\n            {props.history.push('/page/1')}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Home from './components/Home/Home'\nimport Contact from './components/Contact/Contact'\nimport About from './components/About/About'\nimport NavBar from './components/NavBar/NavBar'\nimport Photos from './components/Photos/Photos'\nimport PostDetails from './components/Home/PostDetails'\nimport Redirect from './components/Redirect'\nimport { connect } from 'react-redux'\nimport ReactGA from 'react-ga'\n\nReactGA.initialize('UA-156816671-1');\n\n\nexport class App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Redirect} />\n            <Route path='/page/:page2' component={Home} />\n            <Route path='/about' component={About}/>\n            <Route path='/contact' component={Contact}/>\n            <Route path='/posts/:postId' component={PostDetails}/>\n            <Route path='/photos/:page' component={Photos}/>\n          </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","const initState = {\n    posts: [],\n    post: {},\n    body: [],\n    photos: [],\n    modal: null,\n    modalBody: [],\n    name: null,\n    email: null,\n    text: null\n};\n\nconst postsReducer = (state = initState,action) => {\n    if(action.type === 'GET_ALL_POSTS'){\n        const modal = action.payload.posts[0];\n        const modalBody = action.payload.posts[0].body.split(\"\\\\n\");\n        return {\n           ...initState,\n           posts: action.payload.posts.reverse(),\n           modal: modal,\n           modalBody,\n        }\n    }\n    if(action.type === \"GET_SINGLE_POST\"){\n        const body = action.payload.post[0].body.split(\"\\\\n\");\n        return {\n            ...initState,\n            post: action.payload.post[0],\n            body: body\n        }\n    }\n    if(action.type === \"GET_PHOTOS\") {\n        return {\n            ...initState,\n            photos: action.payload\n        }\n    }\n    if(action.type === \"POST_CONTACT\"){\n        return {\n            name: action.payload.name,\n            email: action.payload.email,\n            text: action.payload.text\n        }\n    }\n    return state;\n}\n\nexport default postsReducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { CookiesProvider } from 'react-cookie';\nimport mainReducer from \"./components/store/reducers/mainReducer\";\nimport thunk from \"redux-thunk\";\nimport \"./reset.css\";\nimport \"./index.css\";\n\nconst store = createStore(mainReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <CookiesProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}