{"version":3,"sources":["components/Home/customStyles.js","components/Home/Posts.js","components/store/actions/allActions.js","components/Home/Home.js","components/Contact/Submitted.js","components/Contact/Contact.js","components/About/About.js","components/NavBar/NavBar.js","components/Photos/Photos.js","components/Home/PostDetails.js","App.js","components/store/reducers/mainReducer.js","index.js"],"names":["customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","Posts","state","loading","closeModal","props","cookies","set","path","handleClick","e","history","push","target","id","ReactGA","page","window","location","pathname","pageview","this","getAllPosts","setState","postList","posts","map","post","body","split","join","key","className","src","alt","title","onClick","modalBodyPar","modalBody","par","Math","random","isOpen","undefined","allCookies","modalIsOpen","style","modal","paddingTop","paddingBottom","React","Component","compose","withCookies","withRouter","connect","dispatch","axios","get","then","res","type","payload","data","Home","Submitted","Contact","name","email","text","isSubmited","handleChange","value","handleSubmit","preventDefault","postContact","onSubmit","placeholder","onChange","required","pattern","About","useEffect","NavBar","href","to","Photos","handleClickNext","num","parseInt","match","params","toString","handleClickPrev","getPhotos","prevProps","photosArr","photos","url","PostDetails","getSinglePost","postId","singlePost","bodyPar","Date","valueOf","initialize","App","exact","component","initState","postsReducer","action","reverse","store","createStore","mainReducer","applyMiddleware","thunk","ReactDOM","render","CookiesProvider","document","getElementById"],"mappings":"qVACaA,EAAe,CACxBC,QAAS,CACPC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,gBAAiB,4BAEnBC,QAAS,CACPN,SAAU,WACVC,IAAK,OACLC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRG,OAAQ,iBACRC,WAAY,OACZC,SAAU,OACVC,wBAAyB,QACzBC,aAAc,MACdC,QAAS,OACTC,QAAS,S,OCXTC,E,2MACJC,MAAQ,CACNC,SAAS,G,EAoBXC,WAAa,WACX,EAAKC,MAAMC,QAAQC,IAAI,eAAe,EAAO,CAACC,KAAM,O,EAItDC,YAAc,SAAAC,GACZ,EAAKL,MAAMM,QAAQC,KAAK,UAAYF,EAAEG,OAAOC,K,2FAtB7CC,IAAQR,IAAI,CAAES,KAAMC,OAAOC,SAASC,WACpCJ,IAAQK,SAASH,OAAOC,SAASC,Y,0CAIjCE,KAAKhB,MAAMiB,gB,4CAIe,IAAvBD,KAAKnB,MAAMC,SACZkB,KAAKE,SAAS,CACZpB,SAAS,M,+BAeL,IAAD,OAEDqB,EADQH,KAAKhB,MAAMoB,MACFC,KAAI,SAAAC,GACzB,IAAMC,EAAOD,EAAKC,KAAKC,MAAM,OAAOC,KAAK,IACzC,OACE,yBAAKC,IAAKJ,EAAKb,GAAIkB,UAAU,QAC3B,yBACEA,UAAU,UACVC,IAAI,2BACJC,IAAI,KAEN,0BAAMF,UAAU,wBAAwBL,EAAKQ,OAC7C,uBAAGH,UAAU,iBACX,6BACCJ,GAEH,yBAAKI,UAAU,UACb,6BACA,4BACElB,GAAIa,EAAKb,GACTkB,UAAU,oBACVI,QAAS,EAAK3B,aAHhB,iBAWR,GAAGY,KAAKnB,MAAMC,QACZ,OACE,yBAAK6B,UAAU,SACb,yBAAKA,UAAU,mBAInB,IAAMK,EAAehB,KAAKhB,MAAMiC,UAAUZ,KAAI,SAAAa,GAC5C,OACE,uBAAGR,IAAmB,IAAdS,KAAKC,SAAgBT,UAAU,aAAaO,MAGxD,OACE,yBAAKP,UAAU,SACf,kBAAC,IAAD,CAAYU,YAA+CC,IAAtCtB,KAAKhB,MAAMuC,WAAWC,YAA4BC,MAAO7D,GAC1E,wBAAI+C,UAAU,+BAA+BX,KAAKhB,MAAM0C,MAAMZ,OAC7DE,EACD,4BAAQD,QAASf,KAAKjB,WAAY4B,UAAU,gBAA5C,UAEF,yBACEA,UAAU,WACVC,IAAI,6BACJC,IAAI,KAEN,wBAAIF,UAAU,aAAac,MAAO,CAACE,WAAY,GAAIC,cAAe,KAAlE,gBACCzB,O,GAtFS0B,IAAMC,WA6GXC,cACbC,IACAC,IACAC,aAnBsB,SAAArD,GACtB,MAAO,CACLuB,MAAOvB,EAAMuB,MACbsB,MAAO7C,EAAM6C,MACbT,UAAWpC,EAAMoC,cAIM,SAAAkB,GACzB,MAAO,CACLlC,YAAa,WACXkC,GChHG,SAAAA,GACLC,IAAMC,IAAI,gDAAgDC,MAAK,SAAAC,GAC7D,OAAOJ,EAAS,CAAEK,KAAM,gBAAiBC,QAASF,EAAIG,kBDmH7CX,CAObnD,GErHa+D,MANf,SAAc3D,GACV,OACI,kBAAC,EAAD,OCOO4D,MAXf,WACE,OACE,yBAAKjC,UAAU,uBACb,yBAAKA,UAAU,WACb,yBAAKC,IAAI,4BAA4BC,IAAI,KACzC,4CCAFgC,E,2MACJhE,MAAQ,CACNiE,KAAM,KACNC,MAAO,KACPC,KAAM,KACNC,YAAY,G,EAQdC,aAAe,SAAA7D,GACb,GAAoB,SAAhBA,EAAEG,OAAOC,GACX,EAAKS,SAAS,CACZ4C,KAAMzD,EAAEG,OAAO2D,aAEZ,GAAoB,UAAhB9D,EAAEG,OAAOC,GAClB,EAAKS,SAAS,CACZ6C,MAAO1D,EAAEG,OAAO2D,YAEb,IAAoB,aAAhB9D,EAAEG,OAAOC,GAIb,OAAO,KAHZ,EAAKS,SAAS,CACZ8C,KAAM3D,EAAEG,OAAO2D,U,EAKrBC,aAAe,SAAA/D,GACbA,EAAEgE,iBACF,EAAKnD,SAAS,CACZ+C,YAAY,IAEd,EAAKjE,MAAMsE,YAAY,EAAKzE,MAAMiE,KAAK,EAAKjE,MAAMkE,MAAM,EAAKlE,MAAMmE,O,mFAzBnEtD,IAAQR,IAAI,CAAES,KAAMC,OAAOC,SAASC,WACpCJ,IAAQK,SAASH,OAAOC,SAASC,Y,+BA4BjC,OAA8B,IAA1BE,KAAKnB,MAAMoE,WAEX,yBAAKtC,UAAU,qBACb,0BAAM4C,SAAUvD,KAAKoD,cACnB,gDACA,yBAAKzC,UAAU,eACb,2BACElB,GAAG,OACH+C,KAAK,OACLgB,YAAY,OACZC,SAAUzD,KAAKkD,aACfQ,UAAQ,KAGZ,yBAAK/C,UAAU,eACb,2BACElB,GAAG,QACHkE,QAAQ,0CACRnB,KAAK,OACLgB,YAAY,SACZC,SAAUzD,KAAKkD,aACfQ,UAAQ,KAGZ,yBAAK/C,UAAU,eACb,8BACElB,GAAG,WACH+C,KAAK,OACL7B,UAAU,WACV6C,YAAY,2BACZC,SAAUzD,KAAKkD,aACfQ,UAAQ,KAGZ,yBAAK/C,UAAU,OACb,yBAAKA,UAAU,UACb,4BAAQ6B,KAAK,SAAS7B,UAAU,YAAhC,eAQyB,IAA1BX,KAAKnB,MAAMoE,WACb,kBAAC,EAAD,WADF,M,GAlFWpB,IAAMC,WAiGbI,cAAQ,MATI,SAAAC,GACzB,MAAO,CACLmB,YAAa,SAACR,EAAMC,EAAOC,GACzBb,EHvEqB,SAACW,EAAMC,EAAOC,GACvC,OAAO,SAAAb,GACLC,IAAM9B,KAAK,iDAAkD,CAC3DwC,OACAC,QACAC,SAEDV,MAAK,SAAAC,GACJ,OAAOJ,EAAS,CAAEK,KAAM,eAAgBC,QAASF,EAAIG,WG+D5CY,CAAYR,EAAMC,EAAOC,QAMzBd,CAAiCW,GCrGjC,SAASe,EAAM5E,GAO5B,OALA6E,qBAAU,WACRnE,IAAQR,IAAI,CAAES,KAAMC,OAAOC,SAASC,WACpCJ,IAAQK,SAASH,OAAOC,SAASC,aAIjC,yBAAKa,UAAU,0BACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,UACb,yBACEA,UAAU,aACVC,IAAI,yBACJC,IAAI,MAGR,yBAAKF,UAAU,SACb,yBACEA,UAAU,SACVC,IAAI,8BACJC,IAAI,QCrBD,SAASiD,IACtB,OACE,6BACE,yBAAKnD,UAAU,oBACb,uBAAGoD,KAAK,IAAIpD,UAAU,cACpB,yBAAKC,IAAI,2BAA2BC,IAAI,MAE1C,wBAAIpB,GAAG,aAAakB,UAAU,8BAC5B,4BACE,kBAAC,IAAD,CAASqD,GAAG,KAAZ,SAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,aAAZ,WAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,UAAZ,UAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,YAAZ,e,IChBNC,E,2MAEFpF,MAAQ,CACJC,SAAS,G,EA0BXoF,gBAAkB,SAAC7E,GACjBA,EAAEgE,iBACF,IAAIc,EAAMC,SAAS,EAAKpF,MAAMqF,MAAMC,OAAO3E,MACxCwE,EAAM,KACLA,GAAO,GACHI,WACJ,EAAKvF,MAAMM,QAAQC,KAAK,WAAa4E,GACrC,EAAKjE,SAAS,CACVpB,SAAS,M,EAKnB0F,gBAAkB,SAACnF,GACjBA,EAAEgE,iBACF,IAAIc,EAAMC,SAAS,EAAKpF,MAAMqF,MAAMC,OAAO3E,MACxCwE,EAAI,KACHA,GAAO,GACHI,WACJ,EAAKvF,MAAMM,QAAQC,KAAK,WAAa4E,GACrC,EAAKjE,SAAS,CACVpB,SAAS,M,2FA3CnBY,IAAQR,IAAI,CAAES,KAAMC,OAAOC,SAASC,WACpCJ,IAAQK,SAASH,OAAOC,SAASC,Y,0CAI/BE,KAAKhB,MAAMyF,UAAUzE,KAAKhB,MAAMqF,MAAMC,OAAO3E,Q,oDAInB,IAAvBK,KAAKnB,MAAMC,SACVkB,KAAKE,SAAS,CACVpB,SAAS,M,yCAIF4F,GACZ1E,KAAKhB,MAAMa,WAAa6E,EAAU7E,UACjCG,KAAKhB,MAAMyF,UAAUzE,KAAKhB,MAAMqF,MAAMC,OAAO3E,Q,+BAgCjD,IAAMgF,EAAY3E,KAAKhB,MAAM4F,OAAOvE,KAAI,SAAAwE,GACpC,OACI,yBAAKlE,UAAU,aACX,yBAAKD,IAAmB,IAAdS,KAAKC,SAAgBR,IAAKiE,EAAKhE,IAAI,SAKzD,OAA0B,IAAvBb,KAAKnB,MAAMC,QAEN,yBAAK6B,UAAU,SACb,yBAAKA,UAAU,mBAKjB,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,yBAAwB,gDAArC,2HACCgE,EACD,yBAAKhE,UAAU,iBACX,4BAAQA,UAAU,eAAeI,QAASf,KAAKwE,iBAA/C,YACA,4BAAQ7D,UAAU,WAAWI,QAASf,KAAKkE,iBAA3C,c,GA7EHpC,aAoGNI,eAbS,SAACrD,GACrB,MAAO,CACH+F,OAAQ/F,EAAM+F,WAIK,SAACzC,GACxB,MAAO,CACHsC,UAAW,SAAC9E,GAAUwC,ENlFL,SAACxC,GACxB,OAAO,SAAAwC,GACLC,IAAMC,IAAI,iDAAmD1C,GAC5D2C,MAAK,SAAAC,GACJ,OAAOJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAAIG,WM8ElB+B,CAAU9E,QAKlCuC,CAA4C+B,GCpGrDa,E,2MAEJjG,MAAQ,CACNC,SAAS,G,2FAITY,IAAQR,IAAI,CAAES,KAAMC,OAAOC,SAASC,WACpCJ,IAAQK,SAASH,OAAOC,SAASC,Y,0CAIjCE,KAAKhB,MAAM+F,cAAc/E,KAAKhB,MAAMqF,MAAMC,OAAOU,U,4CAIvB,IAAvBhF,KAAKnB,MAAMC,SACZkB,KAAKE,SAAS,CACZpB,SAAS,M,+BAMb,IAAMmG,EAAajF,KAAKhB,MAAMsB,KACxB4E,EAAUlF,KAAKhB,MAAMuB,KAAKF,KAAI,SAAAa,GAClC,IAAMR,GAAM,IAAIyE,MAAOC,UAAYjE,KAAKC,SACxC,OACE,uBAAGV,IAAKA,GAAMQ,MAGlB,OAA0B,IAAvBlB,KAAKnB,MAAMC,QAEV,yBAAK6B,UAAU,gBACb,yBAAKC,IAAI,GAAGC,IAAI,KAChB,wBAAIF,UAAU,uBAAuBsE,EAAWnE,OAC/CoE,GAKH,yBAAKvE,UAAU,sB,GAzCGmB,aA8DXI,eAfS,SAAArD,GACtB,MAAO,CACLuB,MAAOvB,EAAMuB,MACbE,KAAMzB,EAAMyB,KACZC,KAAM1B,EAAM0B,SAGW,SAAA4B,GACzB,MAAO,CACL4C,cAAe,SAAAtF,GACb0C,EPpDuB,SAAA1C,GAC3B,OAAO,SAAA0C,GACLC,IAAMC,IAAI,gDAAkD5C,GAAI6C,MAAK,SAAAC,GACnE,OAAOJ,EAAS,CAAEK,KAAM,kBAAmBC,QAASF,EAAIG,WOiD/CqC,CAActF,QAKdyC,CAGb4C,GC3DFpF,IAAQ2F,WAAW,kBAGZ,IAAMC,EAAb,iLAGI,OACE,kBAAC,IAAD,KACE,kBAACxB,EAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO3E,KAAK,IAAIoG,OAAK,EAACC,UAAW7C,IACjC,kBAAC,IAAD,CAAOxD,KAAK,SAASqG,UAAW5B,IAChC,kBAAC,IAAD,CAAOzE,KAAK,WAAWqG,UAAW3C,IAClC,kBAAC,IAAD,CAAO1D,KAAK,iBAAiBqG,UAAWV,IACxC,kBAAC,IAAD,CAAO3F,KAAK,gBAAgBqG,UAAWvB,UAXnD,GAAyBnC,aAyBVI,eANS,SAACrD,GACvB,MAAO,CACLuB,MAAOvB,EAAMuB,SAIF8B,CAAyBoD,G,gBCvClCG,EAAY,CACdrF,MAAO,GACPE,KAAM,GACNC,KAAM,GACNqE,OAAQ,GACRlD,MAAO,KACPT,UAAW,GACX6B,KAAM,KACNC,MAAO,KACPC,KAAM,MAsCK0C,EAnCM,WAA+B,IAA9B7G,EAA6B,uDAArB4G,EAAUE,EAAW,uCAC/C,GAAmB,kBAAhBA,EAAOnD,KAAyB,CAC/B,IAAMd,EAAQiE,EAAOlD,QAAQrC,MAAM,GAC7Ba,EAAY0E,EAAOlD,QAAQrC,MAAM,GAAGG,KAAKC,MAAM,OACrD,OAAO,eACDiF,EADN,CAEGrF,MAAOuF,EAAOlD,QAAQrC,MAAMwF,UAC5BlE,MAAOA,EACPT,cAGP,GAAmB,oBAAhB0E,EAAOnD,KAA2B,CACjC,IAAMjC,EAAOoF,EAAOlD,QAAQnC,KAAK,GAAGC,KAAKC,MAAM,OAC/C,OAAO,eACAiF,EADP,CAEInF,KAAMqF,EAAOlD,QAAQnC,KAAK,GAC1BC,KAAMA,IAGd,MAAmB,eAAhBoF,EAAOnD,KACC,eACAiD,EADP,CAEIb,OAAQe,EAAOlD,UAGJ,iBAAhBkD,EAAOnD,KACC,CACHM,KAAM6C,EAAOlD,QAAQK,KACrBC,MAAO4C,EAAOlD,QAAQM,MACtBC,KAAM2C,EAAOlD,QAAQO,MAGtBnE,G,QCjCLgH,G,YAAQC,YAAYC,EAAaC,YAAgBC,OAEvDC,IAASC,OACP,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.244e38eb.chunk.js","sourcesContent":["\nexport const customStyles = {\n    overlay: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(255, 255, 255, 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      top: '50px',\n      left: '80px',\n      right: '80px',\n      bottom: '90px',\n      border: '1px solid #ccc',\n      background: '#fff',\n      overflow: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      borderRadius: '4px',\n      outline: 'none',\n      padding: '20px'\n    }\n  };","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { withCookies } from 'react-cookie';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { getAllPosts } from \"../store/actions/allActions\";\nimport { customStyles } from './customStyles';\nimport ReactGA from 'react-ga'\n\n\nclass Posts extends React.Component {\n  state = {\n    loading: true,\n  }\n\n  UNSAFE_componentWillMount(){\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname)\n  }\n\n  componentDidMount() {\n    this.props.getAllPosts();\n  }\n\n  componentDidUpdate() {\n    if(this.state.loading === true){\n      this.setState({\n        loading: false\n      })\n    }\n  }\n\n  closeModal = () => {\n    this.props.cookies.set(\"modalIsOpen\", false, {path: \"/\"})\n  }\n\n\n  handleClick = e => {\n    this.props.history.push(\"/posts/\" + e.target.id);\n  };\n\n\n  render() {\n    const posts = this.props.posts;\n    const postList = posts.map(post => {\n      const body = post.body.split(\"\\\\n\").join(\"\");\n      return (\n        <div key={post.id} className=\"post\">\n          <img\n            className=\"crown-1\"\n            src=\"/images/posts-corner.png\"\n            alt=\"\"\n          />\n          <span className=\"card-title red-text \">{post.title}</span>\n          <p className=\"body truncate\">\n            <br />\n            {body}\n          </p>\n          <div className=\"button\">\n            <br />\n            <button\n              id={post.id}\n              className=\"btn grey darken-3\"\n              onClick={this.handleClick}\n            >\n              See More\n            </button>\n          </div>\n        </div>\n      );\n    });\n    if(this.state.loading){\n      return (\n        <div className=\"posts\">\n          <div className=\"lds-dual-ring\"></div>\n        </div>\n      )\n    }else {\n      const modalBodyPar = this.props.modalBody.map(par => {\n        return (\n          <p key={Math.random()*10000} className=\"modal-par\">{par}</p>\n        )\n      })\n      return (\n        <div className=\"posts\">\n        <ReactModal isOpen={(this.props.allCookies.modalIsOpen === undefined)} style={customStyles}>\n            <h1 className=\"card-title modal-card-title\">{this.props.modal.title}</h1>\n            {modalBodyPar}\n            <button onClick={this.closeModal} className=\"modal-button\">Close</button>\n          </ReactModal>\n          <img\n            className=\"socrates\"\n            src=\"/images/posts-socrates.png\"\n            alt=\"\"\n          />\n          <h1 className=\"card-title\" style={{paddingTop: 50, paddingBottom: 50}}>Latest Posts</h1>\n          {postList}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    modal: state.modal,\n    modalBody: state.modalBody\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllPosts: () => {\n      dispatch(getAllPosts());\n    }\n  };\n};\n\nexport default compose(\n  withCookies,\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Posts);\n","import axios from \"axios\";\n\nexport const getAllPosts = () => {\n  return dispatch => {\n    axios.get(\"http://blog-app-rest.herokuapp.com/api/posts\").then(res => {\n      return dispatch({ type: \"GET_ALL_POSTS\", payload: res.data });\n    });\n  };\n};\n\nexport const getSinglePost = id => {\n  return dispatch => {\n    axios.get(\"http://blog-app-rest.herokuapp.com/api/posts/\" + id).then(res => {\n      return dispatch({ type: \"GET_SINGLE_POST\", payload: res.data });\n    });\n  };\n};\n\nexport const getPhotos = (page) => {\n  return dispatch => {\n    axios.get(\"http://blog-app-rest.herokuapp.com/api/photos/\" + page)\n    .then(res => {\n      return dispatch({ type: \"GET_PHOTOS\", payload: res.data})\n    })\n  }\n}\n\nexport const postContact = (name, email, text) => {\n  return dispatch => {\n    axios.post(\"http://blog-app-rest.herokuapp.com/api/contact\", {\n      name,\n      email,\n      text\n    })\n    .then(res => {\n      return dispatch({ type: \"POST_CONTACT\", payload: res.data })\n    })\n  }\n}\n","import React from 'react'\nimport Posts from './Posts'\n\n\nfunction Home(props) {\n    return (\n        <Posts />\n    )\n}\n\nexport default Home\n","import React from \"react\";\n\nfunction Submitted() {\n  return (\n    <div className=\"submitted-container\">\n      <div className=\"content\">\n        <img src=\"/images/submited-tick.png\" alt=\"\" />\n        <h1>SUBMITTED</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Submitted;\n","import React from \"react\";\nimport { connect } from \"react-redux\"\nimport { postContact } from \"../store/actions/allActions\"\nimport Submited from \"./Submitted\";\nimport ReactGA from \"react-ga\";\n\n\nclass Contact extends React.Component {\n  state = {\n    name: null,\n    email: null,\n    text: null,\n    isSubmited: false\n  };\n\n  componentDidMount(){\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  handleChange = e => {\n    if (e.target.id === \"name\") {\n      this.setState({\n        name: e.target.value\n      });\n    } else if (e.target.id === \"email\") {\n      this.setState({\n        email: e.target.value\n      });\n    } else if (e.target.id === \"textarea\") {\n      this.setState({\n        text: e.target.value\n      });\n    } else return null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      isSubmited: true,\n    });\n    this.props.postContact(this.state.name,this.state.email,this.state.text)\n  };\n\n  render() {\n    if (this.state.isSubmited === false) {\n      return (\n        <div className=\"contact-container\">\n          <form onSubmit={this.handleSubmit}>\n            <h1>Stuff To Fill Up</h1>\n            <div className=\"input-field\">\n              <input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <input\n                id=\"email\"\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n                type=\"text\"\n                placeholder=\"E-mail\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <textarea\n                id=\"textarea\"\n                type=\"text\"\n                className=\"textarea\"\n                placeholder=\"What do you want to say?\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"button\">\n                <button type=\"submit\" className=\"btn teal\">\n                  SUBMIT\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      );\n    } else if (this.state.isSubmited === true) {\n      return <Submited />;\n    }\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postContact: (name, email, text) => {\n      dispatch(postContact(name, email, text))\n    }\n  }\n}\n\n\nexport default connect(null,mapDispatchToProps)(Contact);\n","import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nexport default function About(props) {\n\n  useEffect(()=> {\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname);\n  })\n\n  return (\n    <div className=\"about-container center\">\n      <div className=\"about\">\n        <div className=\"photos\">\n          <img\n            className=\"main-photo\"\n            src=\"images/about-self.jpeg\"\n            alt=\"\"\n          />\n        </div>\n        <div className=\"texts\">\n          <img\n            className=\"author\"\n            src=\"/images/about-signature.png\"\n            alt=\"\"\n          />\n          </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function NavBar() {\n  return (\n    <nav>\n      <div className=\"nav-wrapper grey\">\n        <a href=\"/\" className=\"brand-logo\">\n          <img src=\"/images/navbar-brand.png\" alt=\"\" />\n        </a>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li>\n            <NavLink to=\"/\">Home</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/photos/1\">Photos</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/about\">About</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/contact\">Contact</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { getPhotos } from \"../store/actions/allActions\"\nimport ReactGA from 'react-ga'\n\nclass Photos extends Component {\n\n    state = {\n        loading: true,\n    }\n\n    UNSAFE_componentWillMount(){\n      ReactGA.set({ page: window.location.pathname });\n      ReactGA.pageview(window.location.pathname);\n    }\n\n    componentDidMount() {\n        this.props.getPhotos(this.props.match.params.page);\n    }\n\n    UNSAFE_componentWillUpdate(){\n        if(this.state.loading === true){\n            this.setState({\n                loading: false\n            })\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if(this.props.location !== prevProps.location){\n            this.props.getPhotos(this.props.match.params.page);\n        }\n      }\n\n\n      handleClickNext = (e) => {\n        e.preventDefault();\n        let num = parseInt(this.props.match.params.page);\n        if(num < 4){\n            num += 1;\n            num.toString();\n            this.props.history.push(\"/photos/\" + num);\n            this.setState({\n                loading: true\n            })\n        }\n      }\n\n      handleClickPrev = (e) => {\n        e.preventDefault();\n        let num = parseInt(this.props.match.params.page);\n        if(num>1){\n            num -= 1;\n            num.toString();\n            this.props.history.push(\"/photos/\" + num);\n            this.setState({\n                loading: true\n            })\n        }\n      }\n\n      render() {\n        const photosArr = this.props.photos.map(url => {\n            return (\n                <div className=\"ins-photo\">\n                    <img key={Math.random()*10000} src={url} alt=\"\"/>\n                </div>\n            )\n        })\n\n        if(this.state.loading === true) {\n            return (\n                <div className=\"posts\">\n                  <div className=\"lds-dual-ring\"></div>\n                </div>\n            )\n        }else {\n            return (\n                <div className=\"ins-container\">\n                    <p className=\"disclaimer card-title\"><strong>Disclaimer: </strong>I do not own any of the photos. They are just the photos I liked on the internet. All credits to the talented creators.</p>\n                    {photosArr}\n                    <div className=\"btn-container\">\n                        <button className=\"btn-previous\" onClick={this.handleClickPrev}>PREVIOUS</button>\n                        <button className=\"btn-next\" onClick={this.handleClickNext}>NEXT</button>\n                    </div>\n                </div>\n            )\n        }\n\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        photos: state.photos\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getPhotos: (page) => {dispatch(getPhotos(page))}\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Photos);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getSinglePost } from \"../store/actions/allActions\";\nimport ReactGA from 'react-ga'\n\nclass PostDetails extends Component {\n\n  state = {\n    loading: true\n  }\n\n  UNSAFE_componentWillMount(){\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  componentDidMount() {\n    this.props.getSinglePost(this.props.match.params.postId);\n  }\n\n  componentDidUpdate() {\n    if(this.state.loading === true) {\n      this.setState({\n        loading: false\n      })\n    }\n  }\n\n  render() {\n    const singlePost = this.props.post;\n    const bodyPar = this.props.body.map(par => {\n      const key = new Date().valueOf() + Math.random();\n      return (\n        <p key={key}>{par}</p>\n      )\n    })\n    if(this.state.loading === false) {\n      return (\n        <div className=\"post-details\">\n          <img src=\"\" alt=\"\" />\n          <h1 className=\"card-title red-text\">{singlePost.title}</h1>\n          {bodyPar}\n        </div>\n      );\n    }else {\n      return (\n        <div className=\"lds-dual-ring\"></div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    post: state.post,\n    body: state.body\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSinglePost: id => {\n      dispatch(getSinglePost(id));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostDetails);\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Home from './components/Home/Home'\nimport Contact from './components/Contact/Contact'\nimport About from './components/About/About'\nimport NavBar from './components/NavBar/NavBar'\nimport Photos from './components/Photos/Photos'\nimport PostDetails from './components/Home/PostDetails'\nimport { connect } from 'react-redux'\nimport ReactGA from 'react-ga'\n\nReactGA.initialize('UA-156816671-1');\n\n\nexport class App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <NavBar />\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/about' component={About}/>\n            <Route path='/contact' component={Contact}/>\n            <Route path='/posts/:postId' component={PostDetails}/>\n            <Route path='/photos/:page' component={Photos}/>\n          </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","const initState = {\n    posts: [],\n    post: {},\n    body: [],\n    photos: [],\n    modal: null,\n    modalBody: [],\n    name: null,\n    email: null,\n    text: null\n};\n\nconst postsReducer = (state = initState,action) => {\n    if(action.type === 'GET_ALL_POSTS'){\n        const modal = action.payload.posts[0];\n        const modalBody = action.payload.posts[0].body.split(\"\\\\n\");\n        return {\n           ...initState,\n           posts: action.payload.posts.reverse(),\n           modal: modal,\n           modalBody,\n        }\n    }\n    if(action.type === \"GET_SINGLE_POST\"){\n        const body = action.payload.post[0].body.split(\"\\\\n\");\n        return {\n            ...initState,\n            post: action.payload.post[0],\n            body: body\n        }\n    }\n    if(action.type === \"GET_PHOTOS\") {\n        return {\n            ...initState,\n            photos: action.payload\n        }\n    }\n    if(action.type === \"POST_CONTACT\"){\n        return {\n            name: action.payload.name,\n            email: action.payload.email,\n            text: action.payload.text\n        }\n    }\n    return state;\n}\n\nexport default postsReducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { CookiesProvider } from 'react-cookie';\nimport mainReducer from \"./components/store/reducers/mainReducer\";\nimport thunk from \"redux-thunk\";\nimport \"./reset.css\";\nimport \"./index.css\";\n\nconst store = createStore(mainReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <CookiesProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}